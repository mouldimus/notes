git init $newRepositoryName - initilise a directory into a git repository (get it ready for version control)

git help - list git commands (google if unsure)

git add $fileOrDirectory - start tracking files/directories versions ready for being commited to your branch (copy of main repository)

git status - list files & directories that are tracked or untracked before commiting the changes

git commit - commit the changes you have made, to the branch you are in
    -m "Commit message"
    -a - add and commit all

git log - list whose commited what and when

git push - publish your local commits to main

git branch $nameOfBranch - create a branch of the main repository that you can edit without making changes to the master repository
    -d - delete named branch (if you're not in it)

git checkout $nameOfBranch - switch to editing the branch

git switch -    - switches to your previous branch

git merge $nameOfBranch - merges the named branch into the current working branch you are in
    When trying to resolve merge conflicts go into the listed file in the error message. Try using cat, nano or vim.
    Then edit, save and commit the changes of the file by simply removing what you dont want in the program. Then executing the command:
        commit -a -m "Commit Message"

Fork
    A fork is a copy of a repository. You can fork a repository and make changes to it without affecting the original project. Forks are commonly used to recommend changes to projects belonging to someone else or to utilize someone elseâ€™s project as a starting point for your own.

